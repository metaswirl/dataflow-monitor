{
  "swagger" : "2.0",
  "info" : {
    "description" : "Documentation for WebServer REST API\n",
    "version" : "1.0.0",
    "title" : "mera-monitor WebServer API"
  },
  "host" : "localhost:12345",
  "basePath" : "",
  "tags" : [ {
    "name" : "model",
    "description" : "Everything about the running model"
  }, {
    "name" : "metrics",
    "description" : "All you can do with metrics"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/data/topology" : {
      "get" : {
        "tags" : [ "model" ],
        "summary" : "Get topology of the model",
        "description" : "Returns list of operators with tasks and their routing",
        "operationId" : "getTopology",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OperatorTopology"
              }
            }
          }
        }
      }
    },
    "/data/metrics" : {
      "get" : {
        "tags" : [ "metrics" ],
        "summary" : "Get list of available metrics",
        "description" : "Returns list of all avaiable metrics provided by Flink Metric Reporter",
        "operationId" : "getMetrics",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/data/metrics/tasks/init" : {
      "get" : {
        "tags" : [ "metrics" ],
        "summary" : "Get all running metrics",
        "description" : "Gets list of all currently collected Tuples(TaskId, MetricId)",
        "operationId" : "getInitMetricsTasks",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/MetricKey"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "metrics" ],
        "summary" : "Initialize storing metrics",
        "description" : "Initialize storing a metric for given list of tasks with a resolution",
        "operationId" : "postInitMetricsTasks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TasksInitMessage"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/data/metrics/task" : {
      "get" : {
        "tags" : [ "metrics" ],
        "summary" : "Get history of a metric",
        "description" : "Returns history of a given metric for a task since a timestamp. If a metric has not been initialized with data/initMetric it returns an error. Time is formatted as millis since epoch.",
        "operationId" : "getMetricsTasks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "metricId",
          "in" : "query",
          "description" : "ID of metric to be return",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "taskId",
          "in" : "query",
          "description" : "ID of task",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "since",
          "in" : "query",
          "description" : "timestamp in millis",
          "required" : true,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Metric"
              }
            }
          },
          "404" : {
            "description" : "metric has not been initialized"
          }
        }
      }
    }
  },
  "definitions" : {
    "TasksInitMessage" : {
      "type" : "object",
      "properties" : {
        "taskIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "metricId" : {
          "type" : "string"
        },
        "resolution" : {
          "type" : "integer"
        }
      },
      "example" : {
        "metricId" : "metricId",
        "taskIds" : [ "taskIds", "taskIds" ],
        "resolution" : 0
      }
    },
    "OperatorTopology" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "tasks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TaskTopology"
          }
        }
      },
      "example" : {
        "name" : "name",
        "tasks" : [ {
          "output" : [ "output", "output" ],
          "input" : [ "input", "input" ],
          "name" : "name"
        }, {
          "output" : [ "output", "output" ],
          "input" : [ "input", "input" ],
          "name" : "name"
        } ]
      }
    },
    "TaskTopology" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "input" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "output" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "example" : {
        "output" : [ "output", "output" ],
        "input" : [ "input", "input" ],
        "name" : "name"
      }
    },
    "Metric" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "values" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tuple"
          }
        }
      },
      "example" : {
        "values" : [ {
          "value" : 6.02745618307040320615897144307382404804229736328125,
          "timestamp" : 0.80082819046101150206595775671303272247314453125
        }, {
          "value" : 6.02745618307040320615897144307382404804229736328125,
          "timestamp" : 0.80082819046101150206595775671303272247314453125
        } ],
        "id" : "id"
      }
    },
    "Tuple" : {
      "type" : "object",
      "properties" : {
        "timestamp" : {
          "type" : "number"
        },
        "value" : {
          "type" : "number"
        }
      },
      "example" : {
        "value" : 6.02745618307040320615897144307382404804229736328125,
        "timestamp" : 0.80082819046101150206595775671303272247314453125
      }
    },
    "MetricKey" : {
      "type" : "object",
      "properties" : {
        "taskId" : {
          "type" : "string"
        },
        "metricId" : {
          "type" : "string"
        }
      },
      "example" : {
        "metricId" : "metricId",
        "taskId" : "taskId"
      }
    }
  }
}
